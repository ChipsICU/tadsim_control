// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: location.proto

#include "location.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_basic_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_basic_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vec3;
}  // namespace protobuf_basic_2eproto
namespace protobuf_location_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_location_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Location_EgoLane;
}  // namespace protobuf_location_2eproto
namespace sim_msg {
class Location_EgoLaneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Location_EgoLane>
      _instance;
} _Location_EgoLane_default_instance_;
class LocationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Location>
      _instance;
} _Location_default_instance_;
}  // namespace sim_msg
namespace protobuf_location_2eproto {
static void InitDefaultsLocation_EgoLane() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sim_msg::_Location_EgoLane_default_instance_;
    new (ptr) ::sim_msg::Location_EgoLane();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sim_msg::Location_EgoLane::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Location_EgoLane =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLocation_EgoLane}, {}};

static void InitDefaultsLocation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::sim_msg::_Location_default_instance_;
    new (ptr) ::sim_msg::Location();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::sim_msg::Location::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Location =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsLocation}, {
      &protobuf_basic_2eproto::scc_info_Vec3.base,
      &protobuf_location_2eproto::scc_info_Location_EgoLane.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Location_EgoLane.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Location.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sim_msg::Location_EgoLane, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sim_msg::Location_EgoLane, lanepkid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sim_msg::Location_EgoLane, sectionpkid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sim_msg::Location_EgoLane, roadpkid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sim_msg::Location_EgoLane, dist_2_ref_line_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sim_msg::Location, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sim_msg::Location, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sim_msg::Location, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sim_msg::Location, velocity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sim_msg::Location, angular_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sim_msg::Location, rpy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sim_msg::Location, acceleration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::sim_msg::Location, ego_lane_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::sim_msg::Location_EgoLane)},
  { 9, -1, sizeof(::sim_msg::Location)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::sim_msg::_Location_EgoLane_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::sim_msg::_Location_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "location.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016location.proto\022\007sim_msg\032\013basic.proto\"\302"
      "\002\n\010Location\022\t\n\001t\030\001 \001(\001\022\037\n\010position\030\002 \001(\013"
      "2\r.sim_msg.Vec3\022\037\n\010velocity\030\003 \001(\0132\r.sim_"
      "msg.Vec3\022\036\n\007angular\030\004 \001(\0132\r.sim_msg.Vec3"
      "\022\032\n\003rpy\030\005 \001(\0132\r.sim_msg.Vec3\022#\n\014accelera"
      "tion\030\006 \001(\0132\r.sim_msg.Vec3\022+\n\010ego_lane\030\007 "
      "\001(\0132\031.sim_msg.Location.EgoLane\032[\n\007EgoLan"
      "e\022\020\n\010lanepkid\030\001 \001(\003\022\023\n\013sectionpkid\030\002 \001(\004"
      "\022\020\n\010roadpkid\030\003 \001(\004\022\027\n\017dist_2_ref_line\030\004 "
      "\001(\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 371);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "location.proto", &protobuf_RegisterTypes);
  ::protobuf_basic_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_location_2eproto
namespace sim_msg {

// ===================================================================

void Location_EgoLane::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Location_EgoLane::kLanepkidFieldNumber;
const int Location_EgoLane::kSectionpkidFieldNumber;
const int Location_EgoLane::kRoadpkidFieldNumber;
const int Location_EgoLane::kDist2RefLineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Location_EgoLane::Location_EgoLane()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_location_2eproto::scc_info_Location_EgoLane.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sim_msg.Location.EgoLane)
}
Location_EgoLane::Location_EgoLane(const Location_EgoLane& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lanepkid_, &from.lanepkid_,
    static_cast<size_t>(reinterpret_cast<char*>(&dist_2_ref_line_) -
    reinterpret_cast<char*>(&lanepkid_)) + sizeof(dist_2_ref_line_));
  // @@protoc_insertion_point(copy_constructor:sim_msg.Location.EgoLane)
}

void Location_EgoLane::SharedCtor() {
  ::memset(&lanepkid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dist_2_ref_line_) -
      reinterpret_cast<char*>(&lanepkid_)) + sizeof(dist_2_ref_line_));
}

Location_EgoLane::~Location_EgoLane() {
  // @@protoc_insertion_point(destructor:sim_msg.Location.EgoLane)
  SharedDtor();
}

void Location_EgoLane::SharedDtor() {
}

void Location_EgoLane::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Location_EgoLane::descriptor() {
  ::protobuf_location_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_location_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Location_EgoLane& Location_EgoLane::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_location_2eproto::scc_info_Location_EgoLane.base);
  return *internal_default_instance();
}


void Location_EgoLane::Clear() {
// @@protoc_insertion_point(message_clear_start:sim_msg.Location.EgoLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lanepkid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dist_2_ref_line_) -
      reinterpret_cast<char*>(&lanepkid_)) + sizeof(dist_2_ref_line_));
  _internal_metadata_.Clear();
}

bool Location_EgoLane::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sim_msg.Location.EgoLane)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 lanepkid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lanepkid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sectionpkid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sectionpkid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roadpkid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roadpkid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double dist_2_ref_line = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &dist_2_ref_line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sim_msg.Location.EgoLane)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sim_msg.Location.EgoLane)
  return false;
#undef DO_
}

void Location_EgoLane::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sim_msg.Location.EgoLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 lanepkid = 1;
  if (this->lanepkid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->lanepkid(), output);
  }

  // uint64 sectionpkid = 2;
  if (this->sectionpkid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->sectionpkid(), output);
  }

  // uint64 roadpkid = 3;
  if (this->roadpkid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->roadpkid(), output);
  }

  // double dist_2_ref_line = 4;
  if (this->dist_2_ref_line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->dist_2_ref_line(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sim_msg.Location.EgoLane)
}

::google::protobuf::uint8* Location_EgoLane::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sim_msg.Location.EgoLane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 lanepkid = 1;
  if (this->lanepkid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->lanepkid(), target);
  }

  // uint64 sectionpkid = 2;
  if (this->sectionpkid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->sectionpkid(), target);
  }

  // uint64 roadpkid = 3;
  if (this->roadpkid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->roadpkid(), target);
  }

  // double dist_2_ref_line = 4;
  if (this->dist_2_ref_line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->dist_2_ref_line(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sim_msg.Location.EgoLane)
  return target;
}

size_t Location_EgoLane::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sim_msg.Location.EgoLane)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 lanepkid = 1;
  if (this->lanepkid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->lanepkid());
  }

  // uint64 sectionpkid = 2;
  if (this->sectionpkid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sectionpkid());
  }

  // uint64 roadpkid = 3;
  if (this->roadpkid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roadpkid());
  }

  // double dist_2_ref_line = 4;
  if (this->dist_2_ref_line() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Location_EgoLane::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sim_msg.Location.EgoLane)
  GOOGLE_DCHECK_NE(&from, this);
  const Location_EgoLane* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Location_EgoLane>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sim_msg.Location.EgoLane)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sim_msg.Location.EgoLane)
    MergeFrom(*source);
  }
}

void Location_EgoLane::MergeFrom(const Location_EgoLane& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sim_msg.Location.EgoLane)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lanepkid() != 0) {
    set_lanepkid(from.lanepkid());
  }
  if (from.sectionpkid() != 0) {
    set_sectionpkid(from.sectionpkid());
  }
  if (from.roadpkid() != 0) {
    set_roadpkid(from.roadpkid());
  }
  if (from.dist_2_ref_line() != 0) {
    set_dist_2_ref_line(from.dist_2_ref_line());
  }
}

void Location_EgoLane::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sim_msg.Location.EgoLane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Location_EgoLane::CopyFrom(const Location_EgoLane& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sim_msg.Location.EgoLane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location_EgoLane::IsInitialized() const {
  return true;
}

void Location_EgoLane::Swap(Location_EgoLane* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Location_EgoLane::InternalSwap(Location_EgoLane* other) {
  using std::swap;
  swap(lanepkid_, other->lanepkid_);
  swap(sectionpkid_, other->sectionpkid_);
  swap(roadpkid_, other->roadpkid_);
  swap(dist_2_ref_line_, other->dist_2_ref_line_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Location_EgoLane::GetMetadata() const {
  protobuf_location_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_location_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Location::InitAsDefaultInstance() {
  ::sim_msg::_Location_default_instance_._instance.get_mutable()->position_ = const_cast< ::sim_msg::Vec3*>(
      ::sim_msg::Vec3::internal_default_instance());
  ::sim_msg::_Location_default_instance_._instance.get_mutable()->velocity_ = const_cast< ::sim_msg::Vec3*>(
      ::sim_msg::Vec3::internal_default_instance());
  ::sim_msg::_Location_default_instance_._instance.get_mutable()->angular_ = const_cast< ::sim_msg::Vec3*>(
      ::sim_msg::Vec3::internal_default_instance());
  ::sim_msg::_Location_default_instance_._instance.get_mutable()->rpy_ = const_cast< ::sim_msg::Vec3*>(
      ::sim_msg::Vec3::internal_default_instance());
  ::sim_msg::_Location_default_instance_._instance.get_mutable()->acceleration_ = const_cast< ::sim_msg::Vec3*>(
      ::sim_msg::Vec3::internal_default_instance());
  ::sim_msg::_Location_default_instance_._instance.get_mutable()->ego_lane_ = const_cast< ::sim_msg::Location_EgoLane*>(
      ::sim_msg::Location_EgoLane::internal_default_instance());
}
void Location::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
void Location::clear_velocity() {
  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) {
    delete velocity_;
  }
  velocity_ = NULL;
}
void Location::clear_angular() {
  if (GetArenaNoVirtual() == NULL && angular_ != NULL) {
    delete angular_;
  }
  angular_ = NULL;
}
void Location::clear_rpy() {
  if (GetArenaNoVirtual() == NULL && rpy_ != NULL) {
    delete rpy_;
  }
  rpy_ = NULL;
}
void Location::clear_acceleration() {
  if (GetArenaNoVirtual() == NULL && acceleration_ != NULL) {
    delete acceleration_;
  }
  acceleration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Location::kTFieldNumber;
const int Location::kPositionFieldNumber;
const int Location::kVelocityFieldNumber;
const int Location::kAngularFieldNumber;
const int Location::kRpyFieldNumber;
const int Location::kAccelerationFieldNumber;
const int Location::kEgoLaneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Location::Location()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_location_2eproto::scc_info_Location.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:sim_msg.Location)
}
Location::Location(const Location& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::sim_msg::Vec3(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_velocity()) {
    velocity_ = new ::sim_msg::Vec3(*from.velocity_);
  } else {
    velocity_ = NULL;
  }
  if (from.has_angular()) {
    angular_ = new ::sim_msg::Vec3(*from.angular_);
  } else {
    angular_ = NULL;
  }
  if (from.has_rpy()) {
    rpy_ = new ::sim_msg::Vec3(*from.rpy_);
  } else {
    rpy_ = NULL;
  }
  if (from.has_acceleration()) {
    acceleration_ = new ::sim_msg::Vec3(*from.acceleration_);
  } else {
    acceleration_ = NULL;
  }
  if (from.has_ego_lane()) {
    ego_lane_ = new ::sim_msg::Location_EgoLane(*from.ego_lane_);
  } else {
    ego_lane_ = NULL;
  }
  t_ = from.t_;
  // @@protoc_insertion_point(copy_constructor:sim_msg.Location)
}

void Location::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&t_) -
      reinterpret_cast<char*>(&position_)) + sizeof(t_));
}

Location::~Location() {
  // @@protoc_insertion_point(destructor:sim_msg.Location)
  SharedDtor();
}

void Location::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete velocity_;
  if (this != internal_default_instance()) delete angular_;
  if (this != internal_default_instance()) delete rpy_;
  if (this != internal_default_instance()) delete acceleration_;
  if (this != internal_default_instance()) delete ego_lane_;
}

void Location::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Location::descriptor() {
  ::protobuf_location_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_location_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Location& Location::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_location_2eproto::scc_info_Location.base);
  return *internal_default_instance();
}


void Location::Clear() {
// @@protoc_insertion_point(message_clear_start:sim_msg.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && velocity_ != NULL) {
    delete velocity_;
  }
  velocity_ = NULL;
  if (GetArenaNoVirtual() == NULL && angular_ != NULL) {
    delete angular_;
  }
  angular_ = NULL;
  if (GetArenaNoVirtual() == NULL && rpy_ != NULL) {
    delete rpy_;
  }
  rpy_ = NULL;
  if (GetArenaNoVirtual() == NULL && acceleration_ != NULL) {
    delete acceleration_;
  }
  acceleration_ = NULL;
  if (GetArenaNoVirtual() == NULL && ego_lane_ != NULL) {
    delete ego_lane_;
  }
  ego_lane_ = NULL;
  t_ = 0;
  _internal_metadata_.Clear();
}

bool Location::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sim_msg.Location)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double t = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &t_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sim_msg.Vec3 position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sim_msg.Vec3 velocity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_velocity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sim_msg.Vec3 angular = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_angular()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sim_msg.Vec3 rpy = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rpy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sim_msg.Vec3 acceleration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acceleration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .sim_msg.Location.EgoLane ego_lane = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ego_lane()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sim_msg.Location)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sim_msg.Location)
  return false;
#undef DO_
}

void Location::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sim_msg.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double t = 1;
  if (this->t() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->t(), output);
  }

  // .sim_msg.Vec3 position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  // .sim_msg.Vec3 velocity = 3;
  if (this->has_velocity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_velocity(), output);
  }

  // .sim_msg.Vec3 angular = 4;
  if (this->has_angular()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_angular(), output);
  }

  // .sim_msg.Vec3 rpy = 5;
  if (this->has_rpy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_rpy(), output);
  }

  // .sim_msg.Vec3 acceleration = 6;
  if (this->has_acceleration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_acceleration(), output);
  }

  // .sim_msg.Location.EgoLane ego_lane = 7;
  if (this->has_ego_lane()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_ego_lane(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:sim_msg.Location)
}

::google::protobuf::uint8* Location::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:sim_msg.Location)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double t = 1;
  if (this->t() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->t(), target);
  }

  // .sim_msg.Vec3 position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  // .sim_msg.Vec3 velocity = 3;
  if (this->has_velocity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_velocity(), deterministic, target);
  }

  // .sim_msg.Vec3 angular = 4;
  if (this->has_angular()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_angular(), deterministic, target);
  }

  // .sim_msg.Vec3 rpy = 5;
  if (this->has_rpy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_rpy(), deterministic, target);
  }

  // .sim_msg.Vec3 acceleration = 6;
  if (this->has_acceleration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_acceleration(), deterministic, target);
  }

  // .sim_msg.Location.EgoLane ego_lane = 7;
  if (this->has_ego_lane()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_ego_lane(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sim_msg.Location)
  return target;
}

size_t Location::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:sim_msg.Location)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .sim_msg.Vec3 position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .sim_msg.Vec3 velocity = 3;
  if (this->has_velocity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *velocity_);
  }

  // .sim_msg.Vec3 angular = 4;
  if (this->has_angular()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *angular_);
  }

  // .sim_msg.Vec3 rpy = 5;
  if (this->has_rpy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rpy_);
  }

  // .sim_msg.Vec3 acceleration = 6;
  if (this->has_acceleration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *acceleration_);
  }

  // .sim_msg.Location.EgoLane ego_lane = 7;
  if (this->has_ego_lane()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ego_lane_);
  }

  // double t = 1;
  if (this->t() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Location::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:sim_msg.Location)
  GOOGLE_DCHECK_NE(&from, this);
  const Location* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Location>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:sim_msg.Location)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:sim_msg.Location)
    MergeFrom(*source);
  }
}

void Location::MergeFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:sim_msg.Location)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::sim_msg::Vec3::MergeFrom(from.position());
  }
  if (from.has_velocity()) {
    mutable_velocity()->::sim_msg::Vec3::MergeFrom(from.velocity());
  }
  if (from.has_angular()) {
    mutable_angular()->::sim_msg::Vec3::MergeFrom(from.angular());
  }
  if (from.has_rpy()) {
    mutable_rpy()->::sim_msg::Vec3::MergeFrom(from.rpy());
  }
  if (from.has_acceleration()) {
    mutable_acceleration()->::sim_msg::Vec3::MergeFrom(from.acceleration());
  }
  if (from.has_ego_lane()) {
    mutable_ego_lane()->::sim_msg::Location_EgoLane::MergeFrom(from.ego_lane());
  }
  if (from.t() != 0) {
    set_t(from.t());
  }
}

void Location::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:sim_msg.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Location::CopyFrom(const Location& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:sim_msg.Location)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Location::IsInitialized() const {
  return true;
}

void Location::Swap(Location* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Location::InternalSwap(Location* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(velocity_, other->velocity_);
  swap(angular_, other->angular_);
  swap(rpy_, other->rpy_);
  swap(acceleration_, other->acceleration_);
  swap(ego_lane_, other->ego_lane_);
  swap(t_, other->t_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Location::GetMetadata() const {
  protobuf_location_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_location_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace sim_msg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sim_msg::Location_EgoLane* Arena::CreateMaybeMessage< ::sim_msg::Location_EgoLane >(Arena* arena) {
  return Arena::CreateInternal< ::sim_msg::Location_EgoLane >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::sim_msg::Location* Arena::CreateMaybeMessage< ::sim_msg::Location >(Arena* arena) {
  return Arena::CreateInternal< ::sim_msg::Location >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
